//// File automatically produced by create_hiponodes.py do not make changes here!!
hipo::bank *BMTRec__Hits = 0;
int get_BMTRec__Hits(int row);
short  BMTRec__Hits_ID ;
short  BMTRec__Hits_sector ;
short  BMTRec__Hits_layer ;
int  BMTRec__Hits_strip ;
float  BMTRec__Hits_fitResidual ;
int  BMTRec__Hits_trkingStat ;
short  BMTRec__Hits_clusterID ;
short  BMTRec__Hits_trkID ;
hipo::bank *RAW__adc = 0;
int get_RAW__adc(int row);
short  RAW__adc_crate ;
short  RAW__adc_slot ;
short  RAW__adc_channel ;
short  RAW__adc_order ;
int  RAW__adc_ADC ;
float  RAW__adc_time ;
short  RAW__adc_ped ;
hipo::bank *BAND__adc = 0;
int get_BAND__adc(int row);
short  BAND__adc_sector ;
short  BAND__adc_layer ;
short  BAND__adc_component ;
short  BAND__adc_order ;
int  BAND__adc_ADC ;
float  BAND__adc_time ;
short  BAND__adc_ped ;
hipo::bank *RUN__config = 0;
int get_RUN__config(int row);
int  RUN__config_run ;
int  RUN__config_event ;
int  RUN__config_unixtime ;
long  RUN__config_trigger ;
long  RUN__config_timestamp ;
short  RUN__config_type ;
short  RUN__config_mode ;
float  RUN__config_torus ;
float  RUN__config_solenoid ;
hipo::bank *RICH__clusters = 0;
int get_RICH__clusters(int row);
short  RICH__clusters_id ;
short  RICH__clusters_size ;
short  RICH__clusters_sector ;
short  RICH__clusters_tile ;
short  RICH__clusters_pmt ;
float  RICH__clusters_charge ;
float  RICH__clusters_time ;
float  RICH__clusters_rawtime ;
float  RICH__clusters_x ;
float  RICH__clusters_y ;
float  RICH__clusters_z ;
float  RICH__clusters_wtime ;
float  RICH__clusters_wx ;
float  RICH__clusters_wy ;
float  RICH__clusters_wz ;
hipo::bank *RECHB__Scintillator = 0;
int get_RECHB__Scintillator(int row);
short  RECHB__Scintillator_index ;
short  RECHB__Scintillator_pindex ;
short  RECHB__Scintillator_detector ;
short  RECHB__Scintillator_sector ;
short  RECHB__Scintillator_layer ;
short  RECHB__Scintillator_component ;
float  RECHB__Scintillator_energy ;
float  RECHB__Scintillator_time ;
float  RECHB__Scintillator_path ;
float  RECHB__Scintillator_chi2 ;
float  RECHB__Scintillator_x ;
float  RECHB__Scintillator_y ;
float  RECHB__Scintillator_z ;
float  RECHB__Scintillator_hx ;
float  RECHB__Scintillator_hy ;
float  RECHB__Scintillator_hz ;
short  RECHB__Scintillator_status ;
hipo::bank *REC__RingCher = 0;
int get_REC__RingCher(int row);
short  REC__RingCher_id ;
short  REC__RingCher_hindex ;
short  REC__RingCher_pindex ;
float  REC__RingCher_apath ;
float  REC__RingCher_atime ;
float  REC__RingCher_aEtaC ;
float  REC__RingCher_tpath ;
float  REC__RingCher_ttime ;
float  REC__RingCher_tEtaC ;
hipo::bank *BSTRec__LayerEffs = 0;
int get_BSTRec__LayerEffs(int row);
short  BSTRec__LayerEffs_sector ;
short  BSTRec__LayerEffs_layer ;
float  BSTRec__LayerEffs_residual ;
short  BSTRec__LayerEffs_status ;
hipo::bank *RTPC__pos = 0;
int get_RTPC__pos(int row);
float  RTPC__pos_step ;
float  RTPC__pos_time ;
float  RTPC__pos_energy ;
float  RTPC__pos_posx ;
float  RTPC__pos_posy ;
float  RTPC__pos_posz ;
float  RTPC__pos_phi ;
hipo::bank *TimeBasedTrkg__TBCrosses = 0;
int get_TimeBasedTrkg__TBCrosses(int row);
short  TimeBasedTrkg__TBCrosses_id ;
short  TimeBasedTrkg__TBCrosses_status ;
short  TimeBasedTrkg__TBCrosses_sector ;
short  TimeBasedTrkg__TBCrosses_region ;
float  TimeBasedTrkg__TBCrosses_x ;
float  TimeBasedTrkg__TBCrosses_y ;
float  TimeBasedTrkg__TBCrosses_z ;
float  TimeBasedTrkg__TBCrosses_err_x ;
float  TimeBasedTrkg__TBCrosses_err_y ;
float  TimeBasedTrkg__TBCrosses_err_z ;
float  TimeBasedTrkg__TBCrosses_ux ;
float  TimeBasedTrkg__TBCrosses_uy ;
float  TimeBasedTrkg__TBCrosses_uz ;
float  TimeBasedTrkg__TBCrosses_err_ux ;
float  TimeBasedTrkg__TBCrosses_err_uy ;
float  TimeBasedTrkg__TBCrosses_err_uz ;
short  TimeBasedTrkg__TBCrosses_Segment1_ID ;
short  TimeBasedTrkg__TBCrosses_Segment2_ID ;
hipo::bank *HitBasedTrkg__HBTracks = 0;
int get_HitBasedTrkg__HBTracks(int row);
short  HitBasedTrkg__HBTracks_id ;
short  HitBasedTrkg__HBTracks_status ;
short  HitBasedTrkg__HBTracks_sector ;
float  HitBasedTrkg__HBTracks_c1_x ;
float  HitBasedTrkg__HBTracks_c1_y ;
float  HitBasedTrkg__HBTracks_c1_z ;
float  HitBasedTrkg__HBTracks_c1_ux ;
float  HitBasedTrkg__HBTracks_c1_uy ;
float  HitBasedTrkg__HBTracks_c1_uz ;
float  HitBasedTrkg__HBTracks_c3_x ;
float  HitBasedTrkg__HBTracks_c3_y ;
float  HitBasedTrkg__HBTracks_c3_z ;
float  HitBasedTrkg__HBTracks_c3_ux ;
float  HitBasedTrkg__HBTracks_c3_uy ;
float  HitBasedTrkg__HBTracks_c3_uz ;
float  HitBasedTrkg__HBTracks_t1_x ;
float  HitBasedTrkg__HBTracks_t1_y ;
float  HitBasedTrkg__HBTracks_t1_z ;
float  HitBasedTrkg__HBTracks_t1_px ;
float  HitBasedTrkg__HBTracks_t1_py ;
float  HitBasedTrkg__HBTracks_t1_pz ;
float  HitBasedTrkg__HBTracks_Vtx0_x ;
float  HitBasedTrkg__HBTracks_Vtx0_y ;
float  HitBasedTrkg__HBTracks_Vtx0_z ;
float  HitBasedTrkg__HBTracks_p0_x ;
float  HitBasedTrkg__HBTracks_p0_y ;
float  HitBasedTrkg__HBTracks_p0_z ;
float  HitBasedTrkg__HBTracks_x ;
float  HitBasedTrkg__HBTracks_y ;
float  HitBasedTrkg__HBTracks_z ;
float  HitBasedTrkg__HBTracks_tx ;
float  HitBasedTrkg__HBTracks_ty ;
short  HitBasedTrkg__HBTracks_Cross1_ID ;
short  HitBasedTrkg__HBTracks_Cross2_ID ;
short  HitBasedTrkg__HBTracks_Cross3_ID ;
short  HitBasedTrkg__HBTracks_q ;
float  HitBasedTrkg__HBTracks_pathlength ;
float  HitBasedTrkg__HBTracks_chi2 ;
short  HitBasedTrkg__HBTracks_ndf ;
hipo::bank *CVTRec__Cosmics = 0;
int get_CVTRec__Cosmics(int row);
short  CVTRec__Cosmics_ID ;
float  CVTRec__Cosmics_trkline_yx_slope ;
float  CVTRec__Cosmics_trkline_yx_interc ;
float  CVTRec__Cosmics_trkline_yz_slope ;
float  CVTRec__Cosmics_trkline_yz_interc ;
float  CVTRec__Cosmics_theta ;
float  CVTRec__Cosmics_phi ;
float  CVTRec__Cosmics_chi2 ;
short  CVTRec__Cosmics_ndf ;
short  CVTRec__Cosmics_Cross1_ID ;
short  CVTRec__Cosmics_Cross2_ID ;
short  CVTRec__Cosmics_Cross3_ID ;
short  CVTRec__Cosmics_Cross4_ID ;
short  CVTRec__Cosmics_Cross5_ID ;
short  CVTRec__Cosmics_Cross6_ID ;
short  CVTRec__Cosmics_Cross7_ID ;
short  CVTRec__Cosmics_Cross8_ID ;
short  CVTRec__Cosmics_Cross9_ID ;
short  CVTRec__Cosmics_Cross10_ID ;
short  CVTRec__Cosmics_Cross11_ID ;
short  CVTRec__Cosmics_Cross12_ID ;
short  CVTRec__Cosmics_Cross13_ID ;
short  CVTRec__Cosmics_Cross14_ID ;
short  CVTRec__Cosmics_Cross15_ID ;
short  CVTRec__Cosmics_Cross16_ID ;
short  CVTRec__Cosmics_Cross17_ID ;
short  CVTRec__Cosmics_Cross18_ID ;
hipo::bank *RECHB__Cherenkov = 0;
int get_RECHB__Cherenkov(int row);
short  RECHB__Cherenkov_index ;
short  RECHB__Cherenkov_pindex ;
short  RECHB__Cherenkov_detector ;
short  RECHB__Cherenkov_sector ;
float  RECHB__Cherenkov_nphe ;
float  RECHB__Cherenkov_time ;
float  RECHB__Cherenkov_path ;
float  RECHB__Cherenkov_chi2 ;
float  RECHB__Cherenkov_x ;
float  RECHB__Cherenkov_y ;
float  RECHB__Cherenkov_z ;
float  RECHB__Cherenkov_dtheta ;
float  RECHB__Cherenkov_dphi ;
short  RECHB__Cherenkov_status ;
hipo::bank *BSTRec__Clusters = 0;
int get_BSTRec__Clusters(int row);
short  BSTRec__Clusters_ID ;
short  BSTRec__Clusters_sector ;
short  BSTRec__Clusters_layer ;
short  BSTRec__Clusters_size ;
float  BSTRec__Clusters_ETot ;
float  BSTRec__Clusters_seedE ;
int  BSTRec__Clusters_seedStrip ;
float  BSTRec__Clusters_centroid ;
float  BSTRec__Clusters_centroidResidual ;
float  BSTRec__Clusters_seedResidual ;
short  BSTRec__Clusters_Hit1_ID ;
short  BSTRec__Clusters_Hit2_ID ;
short  BSTRec__Clusters_Hit3_ID ;
short  BSTRec__Clusters_Hit4_ID ;
short  BSTRec__Clusters_Hit5_ID ;
short  BSTRec__Clusters_trkID ;
hipo::bank *CVTRec__Trajectory = 0;
int get_CVTRec__Trajectory(int row);
short  CVTRec__Trajectory_id ;
short  CVTRec__Trajectory_detector ;
short  CVTRec__Trajectory_sector ;
short  CVTRec__Trajectory_layer ;
float  CVTRec__Trajectory_x ;
float  CVTRec__Trajectory_y ;
float  CVTRec__Trajectory_z ;
float  CVTRec__Trajectory_phi ;
float  CVTRec__Trajectory_theta ;
float  CVTRec__Trajectory_langle ;
float  CVTRec__Trajectory_centroid ;
float  CVTRec__Trajectory_path ;
hipo::bank *RECHB__Calorimeter = 0;
int get_RECHB__Calorimeter(int row);
short  RECHB__Calorimeter_index ;
short  RECHB__Calorimeter_pindex ;
short  RECHB__Calorimeter_detector ;
short  RECHB__Calorimeter_sector ;
short  RECHB__Calorimeter_layer ;
float  RECHB__Calorimeter_energy ;
float  RECHB__Calorimeter_time ;
float  RECHB__Calorimeter_path ;
float  RECHB__Calorimeter_chi2 ;
float  RECHB__Calorimeter_x ;
float  RECHB__Calorimeter_y ;
float  RECHB__Calorimeter_z ;
float  RECHB__Calorimeter_hx ;
float  RECHB__Calorimeter_hy ;
float  RECHB__Calorimeter_hz ;
float  RECHB__Calorimeter_lu ;
float  RECHB__Calorimeter_lv ;
float  RECHB__Calorimeter_lw ;
float  RECHB__Calorimeter_du ;
float  RECHB__Calorimeter_dv ;
float  RECHB__Calorimeter_dw ;
float  RECHB__Calorimeter_m2u ;
float  RECHB__Calorimeter_m2v ;
float  RECHB__Calorimeter_m2w ;
float  RECHB__Calorimeter_m3u ;
float  RECHB__Calorimeter_m3v ;
float  RECHB__Calorimeter_m3w ;
short  RECHB__Calorimeter_status ;
hipo::bank *TimeBasedTrkg__TBSegmentTrajectory = 0;
int get_TimeBasedTrkg__TBSegmentTrajectory(int row);
short  TimeBasedTrkg__TBSegmentTrajectory_segmentID ;
short  TimeBasedTrkg__TBSegmentTrajectory_sector ;
short  TimeBasedTrkg__TBSegmentTrajectory_superlayer ;
short  TimeBasedTrkg__TBSegmentTrajectory_layer ;
short  TimeBasedTrkg__TBSegmentTrajectory_matchedHitID ;
float  TimeBasedTrkg__TBSegmentTrajectory_trkDoca ;
hipo::bank *CTOF__tdc = 0;
int get_CTOF__tdc(int row);
short  CTOF__tdc_sector ;
short  CTOF__tdc_layer ;
short  CTOF__tdc_component ;
short  CTOF__tdc_order ;
int  CTOF__tdc_TDC ;
hipo::bank *REC__Cherenkov = 0;
int get_REC__Cherenkov(int row);
short  REC__Cherenkov_index ;
short  REC__Cherenkov_pindex ;
short  REC__Cherenkov_detector ;
short  REC__Cherenkov_sector ;
float  REC__Cherenkov_nphe ;
float  REC__Cherenkov_time ;
float  REC__Cherenkov_path ;
float  REC__Cherenkov_chi2 ;
float  REC__Cherenkov_x ;
float  REC__Cherenkov_y ;
float  REC__Cherenkov_z ;
float  REC__Cherenkov_dtheta ;
float  REC__Cherenkov_dphi ;
short  REC__Cherenkov_status ;
hipo::bank *BMTRec__LayerEffs = 0;
int get_BMTRec__LayerEffs(int row);
short  BMTRec__LayerEffs_sector ;
short  BMTRec__LayerEffs_layer ;
float  BMTRec__LayerEffs_residual ;
short  BMTRec__LayerEffs_status ;
hipo::bank *FTOF__adc = 0;
int get_FTOF__adc(int row);
short  FTOF__adc_sector ;
short  FTOF__adc_layer ;
short  FTOF__adc_component ;
short  FTOF__adc_order ;
int  FTOF__adc_ADC ;
float  FTOF__adc_time ;
short  FTOF__adc_ped ;
hipo::bank *MC__Lund = 0;
int get_MC__Lund(int row);
short  MC__Lund_index ;
float  MC__Lund_lifetime ;
short  MC__Lund_type ;
int  MC__Lund_pid ;
short  MC__Lund_parent ;
short  MC__Lund_daughter ;
float  MC__Lund_px ;
float  MC__Lund_py ;
float  MC__Lund_pz ;
float  MC__Lund_energy ;
float  MC__Lund_mass ;
float  MC__Lund_vx ;
float  MC__Lund_vy ;
float  MC__Lund_vz ;
hipo::bank *DETECTOR__lcpb = 0;
int get_DETECTOR__lcpb(int row);
short  DETECTOR__lcpb_sector ;
float  DETECTOR__lcpb_etot ;
float  DETECTOR__lcpb_ein ;
float  DETECTOR__lcpb_time ;
float  DETECTOR__lcpb_path ;
float  DETECTOR__lcpb_x ;
float  DETECTOR__lcpb_y ;
float  DETECTOR__lcpb_z ;
hipo::bank *MC__Header = 0;
int get_MC__Header(int row);
int  MC__Header_run ;
int  MC__Header_event ;
short  MC__Header_type ;
float  MC__Header_helicity ;
hipo::bank *CND__clusters = 0;
int get_CND__clusters(int row);
short  CND__clusters_id ;
short  CND__clusters_sector ;
short  CND__clusters_layer ;
short  CND__clusters_component ;
short  CND__clusters_nhits ;
float  CND__clusters_energy ;
float  CND__clusters_x ;
float  CND__clusters_y ;
float  CND__clusters_z ;
float  CND__clusters_time ;
short  CND__clusters_status ;
hipo::bank *TimeBasedTrkg__TBCovMat = 0;
int get_TimeBasedTrkg__TBCovMat(int row);
short  TimeBasedTrkg__TBCovMat_id ;
float  TimeBasedTrkg__TBCovMat_C11 ;
float  TimeBasedTrkg__TBCovMat_C12 ;
float  TimeBasedTrkg__TBCovMat_C13 ;
float  TimeBasedTrkg__TBCovMat_C14 ;
float  TimeBasedTrkg__TBCovMat_C15 ;
float  TimeBasedTrkg__TBCovMat_C21 ;
float  TimeBasedTrkg__TBCovMat_C22 ;
float  TimeBasedTrkg__TBCovMat_C23 ;
float  TimeBasedTrkg__TBCovMat_C24 ;
float  TimeBasedTrkg__TBCovMat_C25 ;
float  TimeBasedTrkg__TBCovMat_C31 ;
float  TimeBasedTrkg__TBCovMat_C32 ;
float  TimeBasedTrkg__TBCovMat_C33 ;
float  TimeBasedTrkg__TBCovMat_C34 ;
float  TimeBasedTrkg__TBCovMat_C35 ;
float  TimeBasedTrkg__TBCovMat_C41 ;
float  TimeBasedTrkg__TBCovMat_C42 ;
float  TimeBasedTrkg__TBCovMat_C43 ;
float  TimeBasedTrkg__TBCovMat_C44 ;
float  TimeBasedTrkg__TBCovMat_C45 ;
float  TimeBasedTrkg__TBCovMat_C51 ;
float  TimeBasedTrkg__TBCovMat_C52 ;
float  TimeBasedTrkg__TBCovMat_C53 ;
float  TimeBasedTrkg__TBCovMat_C54 ;
float  TimeBasedTrkg__TBCovMat_C55 ;
hipo::bank *RICH__hits = 0;
int get_RICH__hits(int row);
short  RICH__hits_id ;
short  RICH__hits_sector ;
short  RICH__hits_tile ;
short  RICH__hits_pmt ;
short  RICH__hits_anode ;
float  RICH__hits_x ;
float  RICH__hits_y ;
float  RICH__hits_z ;
float  RICH__hits_time ;
float  RICH__hits_rawtime ;
short  RICH__hits_cluster ;
short  RICH__hits_xtalk ;
short  RICH__hits_duration ;
hipo::bank *RECHB__Track = 0;
int get_RECHB__Track(int row);
short  RECHB__Track_index ;
short  RECHB__Track_pindex ;
short  RECHB__Track_detector ;
short  RECHB__Track_sector ;
short  RECHB__Track_status ;
short  RECHB__Track_q ;
float  RECHB__Track_chi2 ;
short  RECHB__Track_NDF ;
hipo::bank *MC__True = 0;
int get_MC__True(int row);
short  MC__True_detector ;
int  MC__True_pid ;
int  MC__True_mpid ;
int  MC__True_tid ;
int  MC__True_mtid ;
int  MC__True_otid ;
float  MC__True_trackE ;
float  MC__True_totEdep ;
float  MC__True_avgX ;
float  MC__True_avgY ;
float  MC__True_avgZ ;
float  MC__True_avgLx ;
float  MC__True_avgLy ;
float  MC__True_avgLz ;
float  MC__True_px ;
float  MC__True_py ;
float  MC__True_pz ;
float  MC__True_vx ;
float  MC__True_vy ;
float  MC__True_vz ;
float  MC__True_mvx ;
float  MC__True_mvy ;
float  MC__True_mvz ;
float  MC__True_avgT ;
int  MC__True_nsteps ;
int  MC__True_procID ;
int  MC__True_hitn ;
hipo::bank *BST__adc = 0;
int get_BST__adc(int row);
short  BST__adc_sector ;
short  BST__adc_layer ;
short  BST__adc_component ;
short  BST__adc_order ;
int  BST__adc_ADC ;
float  BST__adc_time ;
short  BST__adc_ped ;
long  BST__adc_timestamp ;
hipo::bank *MC__Event = 0;
int get_MC__Event(int row);
short  MC__Event_npart ;
short  MC__Event_atarget ;
short  MC__Event_ztarget ;
float  MC__Event_ptarget ;
float  MC__Event_pbeam ;
short  MC__Event_btype ;
float  MC__Event_ebeam ;
short  MC__Event_targetid ;
short  MC__Event_processid ;
float  MC__Event_weight ;
hipo::bank *HitBasedTrkg__HBCrosses = 0;
int get_HitBasedTrkg__HBCrosses(int row);
short  HitBasedTrkg__HBCrosses_id ;
short  HitBasedTrkg__HBCrosses_status ;
short  HitBasedTrkg__HBCrosses_sector ;
short  HitBasedTrkg__HBCrosses_region ;
float  HitBasedTrkg__HBCrosses_x ;
float  HitBasedTrkg__HBCrosses_y ;
float  HitBasedTrkg__HBCrosses_z ;
float  HitBasedTrkg__HBCrosses_err_x ;
float  HitBasedTrkg__HBCrosses_err_y ;
float  HitBasedTrkg__HBCrosses_err_z ;
float  HitBasedTrkg__HBCrosses_ux ;
float  HitBasedTrkg__HBCrosses_uy ;
float  HitBasedTrkg__HBCrosses_uz ;
float  HitBasedTrkg__HBCrosses_err_ux ;
float  HitBasedTrkg__HBCrosses_err_uy ;
float  HitBasedTrkg__HBCrosses_err_uz ;
short  HitBasedTrkg__HBCrosses_Segment1_ID ;
short  HitBasedTrkg__HBCrosses_Segment2_ID ;
hipo::bank *FTOF__clusters = 0;
int get_FTOF__clusters(int row);
short  FTOF__clusters_id ;
short  FTOF__clusters_status ;
short  FTOF__clusters_trackid ;
short  FTOF__clusters_sector ;
short  FTOF__clusters_layer ;
short  FTOF__clusters_component ;
float  FTOF__clusters_energy ;
float  FTOF__clusters_time ;
float  FTOF__clusters_energy_unc ;
float  FTOF__clusters_time_unc ;
float  FTOF__clusters_x ;
float  FTOF__clusters_y ;
float  FTOF__clusters_z ;
float  FTOF__clusters_x_unc ;
float  FTOF__clusters_y_unc ;
float  FTOF__clusters_z_unc ;
hipo::bank *REC__TrackCross = 0;
int get_REC__TrackCross(int row);
short  REC__TrackCross_index ;
short  REC__TrackCross_pindex ;
short  REC__TrackCross_detector ;
short  REC__TrackCross_sector ;
short  REC__TrackCross_layer ;
float  REC__TrackCross_c_x ;
float  REC__TrackCross_c_y ;
float  REC__TrackCross_c_z ;
float  REC__TrackCross_c_ux ;
float  REC__TrackCross_c_uy ;
float  REC__TrackCross_c_uz ;
short  REC__TrackCross_status ;
hipo::bank *REC__Scintillator = 0;
int get_REC__Scintillator(int row);
short  REC__Scintillator_index ;
short  REC__Scintillator_pindex ;
short  REC__Scintillator_detector ;
short  REC__Scintillator_sector ;
short  REC__Scintillator_layer ;
short  REC__Scintillator_component ;
float  REC__Scintillator_energy ;
float  REC__Scintillator_time ;
float  REC__Scintillator_path ;
float  REC__Scintillator_chi2 ;
float  REC__Scintillator_x ;
float  REC__Scintillator_y ;
float  REC__Scintillator_z ;
float  REC__Scintillator_hx ;
float  REC__Scintillator_hy ;
float  REC__Scintillator_hz ;
short  REC__Scintillator_status ;
hipo::bank *ECAL__peaks = 0;
int get_ECAL__peaks(int row);
short  ECAL__peaks_id ;
short  ECAL__peaks_status ;
short  ECAL__peaks_sector ;
short  ECAL__peaks_layer ;
float  ECAL__peaks_energy ;
float  ECAL__peaks_time ;
float  ECAL__peaks_xo ;
float  ECAL__peaks_yo ;
float  ECAL__peaks_zo ;
float  ECAL__peaks_xe ;
float  ECAL__peaks_ye ;
float  ECAL__peaks_ze ;
float  ECAL__peaks_width ;
hipo::bank *TimeBasedTrkg__TBClusters = 0;
int get_TimeBasedTrkg__TBClusters(int row);
short  TimeBasedTrkg__TBClusters_id ;
short  TimeBasedTrkg__TBClusters_status ;
short  TimeBasedTrkg__TBClusters_sector ;
short  TimeBasedTrkg__TBClusters_superlayer ;
short  TimeBasedTrkg__TBClusters_Hit1_ID ;
short  TimeBasedTrkg__TBClusters_Hit2_ID ;
short  TimeBasedTrkg__TBClusters_Hit3_ID ;
short  TimeBasedTrkg__TBClusters_Hit4_ID ;
short  TimeBasedTrkg__TBClusters_Hit5_ID ;
short  TimeBasedTrkg__TBClusters_Hit6_ID ;
short  TimeBasedTrkg__TBClusters_Hit7_ID ;
short  TimeBasedTrkg__TBClusters_Hit8_ID ;
short  TimeBasedTrkg__TBClusters_Hit9_ID ;
short  TimeBasedTrkg__TBClusters_Hit10_ID ;
short  TimeBasedTrkg__TBClusters_Hit11_ID ;
short  TimeBasedTrkg__TBClusters_Hit12_ID ;
float  TimeBasedTrkg__TBClusters_avgWire ;
float  TimeBasedTrkg__TBClusters_fitChisqProb ;
float  TimeBasedTrkg__TBClusters_fitSlope ;
float  TimeBasedTrkg__TBClusters_fitSlopeErr ;
float  TimeBasedTrkg__TBClusters_fitInterc ;
float  TimeBasedTrkg__TBClusters_fitIntercErr ;
short  TimeBasedTrkg__TBClusters_size ;
hipo::bank *TAGGER__tgpb = 0;
int get_TAGGER__tgpb(int row);
short  TAGGER__tgpb_status ;
short  TAGGER__tgpb_tid ;
short  TAGGER__tgpb_eid ;
float  TAGGER__tgpb_time ;
float  TAGGER__tgpb_energy ;
hipo::bank *LTCC__clusters = 0;
int get_LTCC__clusters(int row);
short  LTCC__clusters_id ;
short  LTCC__clusters_status ;
short  LTCC__clusters_sector ;
short  LTCC__clusters_segment ;
float  LTCC__clusters_x ;
float  LTCC__clusters_y ;
float  LTCC__clusters_z ;
float  LTCC__clusters_nphe ;
float  LTCC__clusters_time ;
short  LTCC__clusters_nHits ;
float  LTCC__clusters_minTheta ;
float  LTCC__clusters_maxTheta ;
float  LTCC__clusters_minPhi ;
float  LTCC__clusters_maxPhi ;
hipo::bank *RICH__hadrons = 0;
int get_RICH__hadrons(int row);
short  RICH__hadrons_id ;
short  RICH__hadrons_hit_index ;
short  RICH__hadrons_particle_index ;
float  RICH__hadrons_traced_the ;
float  RICH__hadrons_traced_phi ;
float  RICH__hadrons_traced_hitx ;
float  RICH__hadrons_traced_hity ;
float  RICH__hadrons_traced_hitz ;
float  RICH__hadrons_traced_time ;
float  RICH__hadrons_traced_path ;
short  RICH__hadrons_traced_ilay ;
short  RICH__hadrons_traced_ico ;
float  RICH__hadrons_traced_emix ;
float  RICH__hadrons_traced_emiy ;
float  RICH__hadrons_traced_emiz ;
float  RICH__hadrons_EtaC_ele ;
float  RICH__hadrons_EtaC_pi ;
float  RICH__hadrons_EtaC_k ;
float  RICH__hadrons_EtaC_pr ;
float  RICH__hadrons_EtaC_min ;
float  RICH__hadrons_EtaC_max ;
hipo::bank *DC__tdc = 0;
int get_DC__tdc(int row);
short  DC__tdc_sector ;
short  DC__tdc_layer ;
short  DC__tdc_component ;
short  DC__tdc_order ;
int  DC__tdc_TDC ;
hipo::bank *BSTRec__Crosses = 0;
int get_BSTRec__Crosses(int row);
short  BSTRec__Crosses_ID ;
short  BSTRec__Crosses_sector ;
short  BSTRec__Crosses_region ;
float  BSTRec__Crosses_x ;
float  BSTRec__Crosses_y ;
float  BSTRec__Crosses_z ;
float  BSTRec__Crosses_err_x ;
float  BSTRec__Crosses_err_y ;
float  BSTRec__Crosses_err_z ;
float  BSTRec__Crosses_ux ;
float  BSTRec__Crosses_uy ;
float  BSTRec__Crosses_uz ;
short  BSTRec__Crosses_Cluster1_ID ;
short  BSTRec__Crosses_Cluster2_ID ;
short  BSTRec__Crosses_trkID ;
hipo::bank *HTCC__rec = 0;
int get_HTCC__rec(int row);
short  HTCC__rec_id ;
short  HTCC__rec_nhits ;
float  HTCC__rec_nphe ;
short  HTCC__rec_ntheta ;
short  HTCC__rec_nphi ;
short  HTCC__rec_mintheta ;
short  HTCC__rec_maxtheta ;
short  HTCC__rec_minphi ;
short  HTCC__rec_maxphi ;
float  HTCC__rec_time ;
float  HTCC__rec_theta ;
float  HTCC__rec_dtheta ;
float  HTCC__rec_phi ;
float  HTCC__rec_dphi ;
float  HTCC__rec_x ;
float  HTCC__rec_y ;
float  HTCC__rec_z ;
hipo::bank *FTHODO__adc = 0;
int get_FTHODO__adc(int row);
short  FTHODO__adc_sector ;
short  FTHODO__adc_layer ;
short  FTHODO__adc_component ;
short  FTHODO__adc_order ;
int  FTHODO__adc_ADC ;
float  FTHODO__adc_time ;
short  FTHODO__adc_ped ;
hipo::bank *FTOF__matchedclusters = 0;
int get_FTOF__matchedclusters(int row);
short  FTOF__matchedclusters_sector ;
short  FTOF__matchedclusters_paddle_id1A ;
short  FTOF__matchedclusters_paddle_id1B ;
short  FTOF__matchedclusters_clus_1Aid ;
short  FTOF__matchedclusters_clus_1Bid ;
short  FTOF__matchedclusters_clusSize_1A ;
short  FTOF__matchedclusters_clusSize_1B ;
float  FTOF__matchedclusters_tminAlgo_1B_tCorr ;
float  FTOF__matchedclusters_midbarAlgo_1B_tCorr ;
float  FTOF__matchedclusters_EmaxAlgo_1B_tCorr ;
hipo::bank *ECAL__adc = 0;
int get_ECAL__adc(int row);
short  ECAL__adc_sector ;
short  ECAL__adc_layer ;
short  ECAL__adc_component ;
short  ECAL__adc_order ;
int  ECAL__adc_ADC ;
float  ECAL__adc_time ;
short  ECAL__adc_ped ;
hipo::bank *FMT__adc = 0;
int get_FMT__adc(int row);
short  FMT__adc_sector ;
short  FMT__adc_layer ;
short  FMT__adc_component ;
short  FMT__adc_order ;
int  FMT__adc_ADC ;
float  FMT__adc_time ;
short  FMT__adc_ped ;
int  FMT__adc_integral ;
long  FMT__adc_timestamp ;
hipo::bank *BMT__adc = 0;
int get_BMT__adc(int row);
short  BMT__adc_sector ;
short  BMT__adc_layer ;
short  BMT__adc_component ;
short  BMT__adc_order ;
int  BMT__adc_ADC ;
float  BMT__adc_time ;
short  BMT__adc_ped ;
int  BMT__adc_integral ;
long  BMT__adc_timestamp ;
hipo::bank *ECAL__calib = 0;
int get_ECAL__calib(int row);
short  ECAL__calib_sector ;
short  ECAL__calib_layer ;
float  ECAL__calib_energy ;
float  ECAL__calib_rawEU ;
float  ECAL__calib_rawEV ;
float  ECAL__calib_rawEW ;
float  ECAL__calib_recEU ;
float  ECAL__calib_recEV ;
float  ECAL__calib_recEW ;
hipo::bank *BMTRec__Crosses = 0;
int get_BMTRec__Crosses(int row);
short  BMTRec__Crosses_ID ;
short  BMTRec__Crosses_sector ;
short  BMTRec__Crosses_region ;
float  BMTRec__Crosses_x ;
float  BMTRec__Crosses_y ;
float  BMTRec__Crosses_z ;
float  BMTRec__Crosses_err_x ;
float  BMTRec__Crosses_err_y ;
float  BMTRec__Crosses_err_z ;
float  BMTRec__Crosses_ux ;
float  BMTRec__Crosses_uy ;
float  BMTRec__Crosses_uz ;
short  BMTRec__Crosses_Cluster1_ID ;
short  BMTRec__Crosses_Cluster2_ID ;
short  BMTRec__Crosses_trkID ;
hipo::bank *RUN__rf = 0;
int get_RUN__rf(int row);
short  RUN__rf_id ;
float  RUN__rf_time ;
hipo::bank *BSTRec__Hits = 0;
int get_BSTRec__Hits(int row);
short  BSTRec__Hits_ID ;
short  BSTRec__Hits_sector ;
short  BSTRec__Hits_layer ;
int  BSTRec__Hits_strip ;
float  BSTRec__Hits_fitResidual ;
int  BSTRec__Hits_trkingStat ;
short  BSTRec__Hits_clusterID ;
short  BSTRec__Hits_trkID ;
hipo::bank *HitBasedTrkg__HBSegmentTrajectory = 0;
int get_HitBasedTrkg__HBSegmentTrajectory(int row);
short  HitBasedTrkg__HBSegmentTrajectory_segmentID ;
short  HitBasedTrkg__HBSegmentTrajectory_sector ;
short  HitBasedTrkg__HBSegmentTrajectory_superlayer ;
short  HitBasedTrkg__HBSegmentTrajectory_layer ;
short  HitBasedTrkg__HBSegmentTrajectory_matchedHitID ;
float  HitBasedTrkg__HBSegmentTrajectory_trkDoca ;
hipo::bank *LTCC__adc = 0;
int get_LTCC__adc(int row);
short  LTCC__adc_sector ;
short  LTCC__adc_layer ;
short  LTCC__adc_component ;
short  LTCC__adc_order ;
int  LTCC__adc_ADC ;
float  LTCC__adc_time ;
short  LTCC__adc_ped ;
hipo::bank *CND__tdc = 0;
int get_CND__tdc(int row);
short  CND__tdc_sector ;
short  CND__tdc_layer ;
short  CND__tdc_component ;
short  CND__tdc_order ;
int  CND__tdc_TDC ;
hipo::bank *HTCC__adc = 0;
int get_HTCC__adc(int row);
short  HTCC__adc_sector ;
short  HTCC__adc_layer ;
short  HTCC__adc_component ;
short  HTCC__adc_order ;
int  HTCC__adc_ADC ;
float  HTCC__adc_time ;
short  HTCC__adc_ped ;
hipo::bank *RAW__vtp = 0;
int get_RAW__vtp(int row);
short  RAW__vtp_crate ;
int  RAW__vtp_word ;
hipo::bank *CVTRec__Tracks = 0;
int get_CVTRec__Tracks(int row);
short  CVTRec__Tracks_ID ;
short  CVTRec__Tracks_fittingMethod ;
float  CVTRec__Tracks_c_x ;
float  CVTRec__Tracks_c_y ;
float  CVTRec__Tracks_c_z ;
float  CVTRec__Tracks_c_ux ;
float  CVTRec__Tracks_c_uy ;
float  CVTRec__Tracks_c_uz ;
float  CVTRec__Tracks_pathlength ;
short  CVTRec__Tracks_q ;
float  CVTRec__Tracks_p ;
float  CVTRec__Tracks_pt ;
float  CVTRec__Tracks_phi0 ;
float  CVTRec__Tracks_tandip ;
float  CVTRec__Tracks_z0 ;
float  CVTRec__Tracks_d0 ;
float  CVTRec__Tracks_cov_d02 ;
float  CVTRec__Tracks_cov_d0phi0 ;
float  CVTRec__Tracks_cov_d0rho ;
float  CVTRec__Tracks_cov_phi02 ;
float  CVTRec__Tracks_cov_phi0rho ;
float  CVTRec__Tracks_cov_rho2 ;
float  CVTRec__Tracks_cov_z02 ;
float  CVTRec__Tracks_cov_tandip2 ;
float  CVTRec__Tracks_circlefit_chi2_per_ndf ;
float  CVTRec__Tracks_linefit_chi2_per_ndf ;
float  CVTRec__Tracks_chi2 ;
short  CVTRec__Tracks_ndf ;
short  CVTRec__Tracks_Cross1_ID ;
short  CVTRec__Tracks_Cross2_ID ;
short  CVTRec__Tracks_Cross3_ID ;
short  CVTRec__Tracks_Cross4_ID ;
short  CVTRec__Tracks_Cross5_ID ;
short  CVTRec__Tracks_Cross6_ID ;
short  CVTRec__Tracks_Cross7_ID ;
short  CVTRec__Tracks_Cross8_ID ;
short  CVTRec__Tracks_Cross9_ID ;
hipo::bank *RECFT__Particle = 0;
int get_RECFT__Particle(int row);
int  RECFT__Particle_pid ;
float  RECFT__Particle_beta ;
float  RECFT__Particle_chi2pid ;
short  RECFT__Particle_status ;
hipo::bank *TimeBasedTrkg__TBTracks = 0;
int get_TimeBasedTrkg__TBTracks(int row);
short  TimeBasedTrkg__TBTracks_id ;
short  TimeBasedTrkg__TBTracks_status ;
short  TimeBasedTrkg__TBTracks_sector ;
float  TimeBasedTrkg__TBTracks_c1_x ;
float  TimeBasedTrkg__TBTracks_c1_y ;
float  TimeBasedTrkg__TBTracks_c1_z ;
float  TimeBasedTrkg__TBTracks_c1_ux ;
float  TimeBasedTrkg__TBTracks_c1_uy ;
float  TimeBasedTrkg__TBTracks_c1_uz ;
float  TimeBasedTrkg__TBTracks_c3_x ;
float  TimeBasedTrkg__TBTracks_c3_y ;
float  TimeBasedTrkg__TBTracks_c3_z ;
float  TimeBasedTrkg__TBTracks_c3_ux ;
float  TimeBasedTrkg__TBTracks_c3_uy ;
float  TimeBasedTrkg__TBTracks_c3_uz ;
float  TimeBasedTrkg__TBTracks_t1_x ;
float  TimeBasedTrkg__TBTracks_t1_y ;
float  TimeBasedTrkg__TBTracks_t1_z ;
float  TimeBasedTrkg__TBTracks_t1_px ;
float  TimeBasedTrkg__TBTracks_t1_py ;
float  TimeBasedTrkg__TBTracks_t1_pz ;
float  TimeBasedTrkg__TBTracks_Vtx0_x ;
float  TimeBasedTrkg__TBTracks_Vtx0_y ;
float  TimeBasedTrkg__TBTracks_Vtx0_z ;
float  TimeBasedTrkg__TBTracks_p0_x ;
float  TimeBasedTrkg__TBTracks_p0_y ;
float  TimeBasedTrkg__TBTracks_p0_z ;
short  TimeBasedTrkg__TBTracks_Cross1_ID ;
short  TimeBasedTrkg__TBTracks_Cross2_ID ;
short  TimeBasedTrkg__TBTracks_Cross3_ID ;
short  TimeBasedTrkg__TBTracks_q ;
float  TimeBasedTrkg__TBTracks_pathlength ;
float  TimeBasedTrkg__TBTracks_chi2 ;
short  TimeBasedTrkg__TBTracks_ndf ;
hipo::bank *DETECTOR__icpb = 0;
int get_DETECTOR__icpb(int row);
float  DETECTOR__icpb_etc ;
float  DETECTOR__icpb_ecc ;
float  DETECTOR__icpb_tc ;
float  DETECTOR__icpb_xc ;
float  DETECTOR__icpb_yc ;
hipo::bank *RF__tdc = 0;
int get_RF__tdc(int row);
short  RF__tdc_sector ;
short  RF__tdc_layer ;
short  RF__tdc_component ;
short  RF__tdc_order ;
int  RF__tdc_TDC ;
hipo::bank *HEADER__info = 0;
int get_HEADER__info(int row);
int  HEADER__info_nrun ;
int  HEADER__info_nevt ;
int  HEADER__info_trigger ;
short  HEADER__info_helicity ;
float  HEADER__info_fc ;
float  HEADER__info_fcg ;
float  HEADER__info_stt ;
short  HEADER__info_rastr1 ;
short  HEADER__info_rastr2 ;
hipo::bank *FTCAL__clusters = 0;
int get_FTCAL__clusters(int row);
short  FTCAL__clusters_size ;
short  FTCAL__clusters_id ;
float  FTCAL__clusters_x ;
float  FTCAL__clusters_y ;
float  FTCAL__clusters_z ;
float  FTCAL__clusters_widthX ;
float  FTCAL__clusters_widthY ;
float  FTCAL__clusters_radius ;
float  FTCAL__clusters_time ;
float  FTCAL__clusters_energy ;
float  FTCAL__clusters_maxEnergy ;
float  FTCAL__clusters_recEnergy ;
hipo::bank *RAW__scaler = 0;
int get_RAW__scaler(int row);
short  RAW__scaler_crate ;
short  RAW__scaler_slot ;
short  RAW__scaler_channel ;
short  RAW__scaler_helicity ;
short  RAW__scaler_quartet ;
long  RAW__scaler_value ;
hipo::bank *BMTRec__Clusters = 0;
int get_BMTRec__Clusters(int row);
short  BMTRec__Clusters_ID ;
short  BMTRec__Clusters_sector ;
short  BMTRec__Clusters_layer ;
short  BMTRec__Clusters_size ;
float  BMTRec__Clusters_ETot ;
float  BMTRec__Clusters_seedE ;
int  BMTRec__Clusters_seedStrip ;
float  BMTRec__Clusters_centroid ;
float  BMTRec__Clusters_centroidResidual ;
float  BMTRec__Clusters_seedResidual ;
short  BMTRec__Clusters_Hit1_ID ;
short  BMTRec__Clusters_Hit2_ID ;
short  BMTRec__Clusters_Hit3_ID ;
short  BMTRec__Clusters_Hit4_ID ;
short  BMTRec__Clusters_Hit5_ID ;
short  BMTRec__Clusters_trkID ;
hipo::bank *TimeBasedTrkg__TBSegments = 0;
int get_TimeBasedTrkg__TBSegments(int row);
short  TimeBasedTrkg__TBSegments_id ;
short  TimeBasedTrkg__TBSegments_status ;
short  TimeBasedTrkg__TBSegments_sector ;
short  TimeBasedTrkg__TBSegments_superlayer ;
short  TimeBasedTrkg__TBSegments_Cluster_ID ;
short  TimeBasedTrkg__TBSegments_Hit1_ID ;
short  TimeBasedTrkg__TBSegments_Hit2_ID ;
short  TimeBasedTrkg__TBSegments_Hit3_ID ;
short  TimeBasedTrkg__TBSegments_Hit4_ID ;
short  TimeBasedTrkg__TBSegments_Hit5_ID ;
short  TimeBasedTrkg__TBSegments_Hit6_ID ;
short  TimeBasedTrkg__TBSegments_Hit7_ID ;
short  TimeBasedTrkg__TBSegments_Hit8_ID ;
short  TimeBasedTrkg__TBSegments_Hit9_ID ;
short  TimeBasedTrkg__TBSegments_Hit10_ID ;
short  TimeBasedTrkg__TBSegments_Hit11_ID ;
short  TimeBasedTrkg__TBSegments_Hit12_ID ;
float  TimeBasedTrkg__TBSegments_avgWire ;
float  TimeBasedTrkg__TBSegments_fitChisqProb ;
float  TimeBasedTrkg__TBSegments_fitSlope ;
float  TimeBasedTrkg__TBSegments_fitSlopeErr ;
float  TimeBasedTrkg__TBSegments_fitInterc ;
float  TimeBasedTrkg__TBSegments_fitIntercErr ;
float  TimeBasedTrkg__TBSegments_SegEndPoint1X ;
float  TimeBasedTrkg__TBSegments_SegEndPoint1Z ;
float  TimeBasedTrkg__TBSegments_SegEndPoint2X ;
float  TimeBasedTrkg__TBSegments_SegEndPoint2Z ;
float  TimeBasedTrkg__TBSegments_resiSum ;
float  TimeBasedTrkg__TBSegments_timeSum ;
short  TimeBasedTrkg__TBSegments_size ;
hipo::bank *RECHB__ForwardTagger = 0;
int get_RECHB__ForwardTagger(int row);
short  RECHB__ForwardTagger_index ;
short  RECHB__ForwardTagger_pindex ;
short  RECHB__ForwardTagger_detector ;
short  RECHB__ForwardTagger_layer ;
float  RECHB__ForwardTagger_energy ;
float  RECHB__ForwardTagger_time ;
float  RECHB__ForwardTagger_path ;
float  RECHB__ForwardTagger_chi2 ;
float  RECHB__ForwardTagger_x ;
float  RECHB__ForwardTagger_y ;
float  RECHB__ForwardTagger_z ;
float  RECHB__ForwardTagger_dx ;
float  RECHB__ForwardTagger_dy ;
float  RECHB__ForwardTagger_radius ;
short  RECHB__ForwardTagger_size ;
short  RECHB__ForwardTagger_status ;
hipo::bank *REC__Calorimeter = 0;
int get_REC__Calorimeter(int row);
short  REC__Calorimeter_index ;
short  REC__Calorimeter_pindex ;
short  REC__Calorimeter_detector ;
short  REC__Calorimeter_sector ;
short  REC__Calorimeter_layer ;
float  REC__Calorimeter_energy ;
float  REC__Calorimeter_time ;
float  REC__Calorimeter_path ;
float  REC__Calorimeter_chi2 ;
float  REC__Calorimeter_x ;
float  REC__Calorimeter_y ;
float  REC__Calorimeter_z ;
float  REC__Calorimeter_hx ;
float  REC__Calorimeter_hy ;
float  REC__Calorimeter_hz ;
float  REC__Calorimeter_lu ;
float  REC__Calorimeter_lv ;
float  REC__Calorimeter_lw ;
float  REC__Calorimeter_du ;
float  REC__Calorimeter_dv ;
float  REC__Calorimeter_dw ;
float  REC__Calorimeter_m2u ;
float  REC__Calorimeter_m2v ;
float  REC__Calorimeter_m2w ;
float  REC__Calorimeter_m3u ;
float  REC__Calorimeter_m3v ;
float  REC__Calorimeter_m3w ;
short  REC__Calorimeter_status ;
hipo::bank *REC__CovMat = 0;
int get_REC__CovMat(int row);
short  REC__CovMat_index ;
short  REC__CovMat_pindex ;
float  REC__CovMat_C11 ;
float  REC__CovMat_C12 ;
float  REC__CovMat_C13 ;
float  REC__CovMat_C14 ;
float  REC__CovMat_C15 ;
float  REC__CovMat_C22 ;
float  REC__CovMat_C23 ;
float  REC__CovMat_C24 ;
float  REC__CovMat_C25 ;
float  REC__CovMat_C33 ;
float  REC__CovMat_C34 ;
float  REC__CovMat_C35 ;
float  REC__CovMat_C44 ;
float  REC__CovMat_C45 ;
float  REC__CovMat_C55 ;
hipo::bank *RAW__epics = 0;
int get_RAW__epics(int row);
short  RAW__epics_json ;
hipo::bank *REC__VertDoca = 0;
int get_REC__VertDoca(int row);
short  REC__VertDoca_index1 ;
short  REC__VertDoca_index2 ;
float  REC__VertDoca_x ;
float  REC__VertDoca_y ;
float  REC__VertDoca_z ;
float  REC__VertDoca_x1 ;
float  REC__VertDoca_y1 ;
float  REC__VertDoca_z1 ;
float  REC__VertDoca_cx1 ;
float  REC__VertDoca_cy1 ;
float  REC__VertDoca_cz1 ;
float  REC__VertDoca_x2 ;
float  REC__VertDoca_y2 ;
float  REC__VertDoca_z2 ;
float  REC__VertDoca_cx2 ;
float  REC__VertDoca_cy2 ;
float  REC__VertDoca_cz2 ;
float  REC__VertDoca_r ;
hipo::bank *FTHODO__clusters = 0;
int get_FTHODO__clusters(int row);
short  FTHODO__clusters_size ;
short  FTHODO__clusters_id ;
float  FTHODO__clusters_x ;
float  FTHODO__clusters_y ;
float  FTHODO__clusters_z ;
float  FTHODO__clusters_widthX ;
float  FTHODO__clusters_widthY ;
float  FTHODO__clusters_radius ;
float  FTHODO__clusters_time ;
float  FTHODO__clusters_energy ;
hipo::bank *RUN__scaler = 0;
int get_RUN__scaler(int row);
float  RUN__scaler_fcupgated ;
float  RUN__scaler_fcup ;
float  RUN__scaler_livetime ;
hipo::bank *BAND__hits = 0;
int get_BAND__hits(int row);
short  BAND__hits_id ;
short  BAND__hits_sector ;
short  BAND__hits_layer ;
short  BAND__hits_component ;
float  BAND__hits_meantimeTdc ;
float  BAND__hits_meantimeFadc ;
float  BAND__hits_difftimeTdc ;
float  BAND__hits_difftimeFadc ;
float  BAND__hits_adcLcorr ;
float  BAND__hits_adcRcorr ;
float  BAND__hits_tFadcLcorr ;
float  BAND__hits_tFadcRcorr ;
float  BAND__hits_tTdcLcorr ;
float  BAND__hits_tTdcRcorr ;
float  BAND__hits_x ;
float  BAND__hits_y ;
float  BAND__hits_z ;
float  BAND__hits_ux ;
float  BAND__hits_uy ;
float  BAND__hits_uz ;
hipo::bank *ECAL__hits = 0;
int get_ECAL__hits(int row);
short  ECAL__hits_id ;
short  ECAL__hits_status ;
short  ECAL__hits_sector ;
short  ECAL__hits_layer ;
short  ECAL__hits_strip ;
short  ECAL__hits_peakid ;
float  ECAL__hits_energy ;
float  ECAL__hits_time ;
hipo::bank *ECAL__clusters = 0;
int get_ECAL__clusters(int row);
short  ECAL__clusters_id ;
short  ECAL__clusters_status ;
short  ECAL__clusters_sector ;
short  ECAL__clusters_layer ;
float  ECAL__clusters_x ;
float  ECAL__clusters_y ;
float  ECAL__clusters_z ;
float  ECAL__clusters_energy ;
float  ECAL__clusters_time ;
float  ECAL__clusters_widthU ;
float  ECAL__clusters_widthV ;
float  ECAL__clusters_widthW ;
short  ECAL__clusters_idU ;
short  ECAL__clusters_idV ;
short  ECAL__clusters_idW ;
int  ECAL__clusters_coordU ;
int  ECAL__clusters_coordV ;
int  ECAL__clusters_coordW ;
hipo::bank *FT__particles = 0;
int get_FT__particles(int row);
short  FT__particles_id ;
short  FT__particles_charge ;
float  FT__particles_energy ;
float  FT__particles_cx ;
float  FT__particles_cy ;
float  FT__particles_cz ;
float  FT__particles_time ;
short  FT__particles_calID ;
short  FT__particles_hodoID ;
short  FT__particles_trkID ;
hipo::bank *HitBasedTrkg__HBClusters = 0;
int get_HitBasedTrkg__HBClusters(int row);
short  HitBasedTrkg__HBClusters_id ;
short  HitBasedTrkg__HBClusters_status ;
short  HitBasedTrkg__HBClusters_sector ;
short  HitBasedTrkg__HBClusters_superlayer ;
short  HitBasedTrkg__HBClusters_Hit1_ID ;
short  HitBasedTrkg__HBClusters_Hit2_ID ;
short  HitBasedTrkg__HBClusters_Hit3_ID ;
short  HitBasedTrkg__HBClusters_Hit4_ID ;
short  HitBasedTrkg__HBClusters_Hit5_ID ;
short  HitBasedTrkg__HBClusters_Hit6_ID ;
short  HitBasedTrkg__HBClusters_Hit7_ID ;
short  HitBasedTrkg__HBClusters_Hit8_ID ;
short  HitBasedTrkg__HBClusters_Hit9_ID ;
short  HitBasedTrkg__HBClusters_Hit10_ID ;
short  HitBasedTrkg__HBClusters_Hit11_ID ;
short  HitBasedTrkg__HBClusters_Hit12_ID ;
float  HitBasedTrkg__HBClusters_avgWire ;
float  HitBasedTrkg__HBClusters_fitChisqProb ;
float  HitBasedTrkg__HBClusters_fitSlope ;
float  HitBasedTrkg__HBClusters_fitSlopeErr ;
float  HitBasedTrkg__HBClusters_fitInterc ;
float  HitBasedTrkg__HBClusters_fitIntercErr ;
short  HitBasedTrkg__HBClusters_size ;
hipo::bank *REC__RICH = 0;
int get_REC__RICH(int row);
short  REC__RICH_index ;
short  REC__RICH_pindex ;
short  REC__RICH_detector ;
short  REC__RICH_sector ;
short  REC__RICH_layer ;
float  REC__RICH_energy ;
float  REC__RICH_time ;
float  REC__RICH_path ;
float  REC__RICH_chi2 ;
float  REC__RICH_x ;
float  REC__RICH_y ;
float  REC__RICH_z ;
float  REC__RICH_hx ;
float  REC__RICH_hy ;
float  REC__RICH_hz ;
short  REC__RICH_status ;
hipo::bank *REC__Track = 0;
int get_REC__Track(int row);
short  REC__Track_index ;
short  REC__Track_pindex ;
short  REC__Track_detector ;
short  REC__Track_sector ;
short  REC__Track_status ;
short  REC__Track_q ;
float  REC__Track_chi2 ;
short  REC__Track_NDF ;
hipo::bank *RECHB__Event = 0;
int get_RECHB__Event(int row);
long  RECHB__Event_category ;
long  RECHB__Event_topology ;
float  RECHB__Event_beamCharge ;
double  RECHB__Event_liveTime ;
float  RECHB__Event_startTime ;
float  RECHB__Event_RFTime ;
short  RECHB__Event_helicity ;
short  RECHB__Event_helicityRaw ;
float  RECHB__Event_procTime ;
hipo::bank *FTOF__hbhits = 0;
int get_FTOF__hbhits(int row);
short  FTOF__hbhits_id ;
short  FTOF__hbhits_status ;
short  FTOF__hbhits_trackid ;
short  FTOF__hbhits_sector ;
short  FTOF__hbhits_layer ;
short  FTOF__hbhits_component ;
float  FTOF__hbhits_energy ;
float  FTOF__hbhits_time ;
float  FTOF__hbhits_energy_unc ;
float  FTOF__hbhits_time_unc ;
float  FTOF__hbhits_x ;
float  FTOF__hbhits_y ;
float  FTOF__hbhits_z ;
float  FTOF__hbhits_x_unc ;
float  FTOF__hbhits_y_unc ;
float  FTOF__hbhits_z_unc ;
float  FTOF__hbhits_tx ;
float  FTOF__hbhits_ty ;
float  FTOF__hbhits_tz ;
short  FTOF__hbhits_adc_idx1 ;
short  FTOF__hbhits_adc_idx2 ;
short  FTOF__hbhits_tdc_idx1 ;
short  FTOF__hbhits_tdc_idx2 ;
float  FTOF__hbhits_pathLength ;
float  FTOF__hbhits_pathLengthThruBar ;
hipo::bank *RTPC__adc = 0;
int get_RTPC__adc(int row);
short  RTPC__adc_sector ;
short  RTPC__adc_layer ;
short  RTPC__adc_component ;
short  RTPC__adc_order ;
int  RTPC__adc_ADC ;
float  RTPC__adc_time ;
short  RTPC__adc_ped ;
hipo::bank *FTCAL__adc = 0;
int get_FTCAL__adc(int row);
short  FTCAL__adc_sector ;
short  FTCAL__adc_layer ;
short  FTCAL__adc_component ;
short  FTCAL__adc_order ;
int  FTCAL__adc_ADC ;
float  FTCAL__adc_time ;
short  FTCAL__adc_ped ;
hipo::bank *CTOF__rawhits = 0;
int get_CTOF__rawhits(int row);
short  CTOF__rawhits_id ;
short  CTOF__rawhits_status ;
short  CTOF__rawhits_component ;
float  CTOF__rawhits_energy_up ;
float  CTOF__rawhits_energy_down ;
float  CTOF__rawhits_time_up ;
float  CTOF__rawhits_time_down ;
float  CTOF__rawhits_energy_up_unc ;
float  CTOF__rawhits_energy_down_unc ;
float  CTOF__rawhits_time_up_unc ;
float  CTOF__rawhits_time_down_unc ;
hipo::bank *CND__adc = 0;
int get_CND__adc(int row);
short  CND__adc_sector ;
short  CND__adc_layer ;
short  CND__adc_component ;
short  CND__adc_order ;
int  CND__adc_ADC ;
float  CND__adc_time ;
short  CND__adc_ped ;
hipo::bank *FTOF__hits = 0;
int get_FTOF__hits(int row);
short  FTOF__hits_id ;
short  FTOF__hits_status ;
short  FTOF__hits_trackid ;
short  FTOF__hits_sector ;
short  FTOF__hits_layer ;
short  FTOF__hits_component ;
float  FTOF__hits_energy ;
float  FTOF__hits_time ;
float  FTOF__hits_energy_unc ;
float  FTOF__hits_time_unc ;
float  FTOF__hits_x ;
float  FTOF__hits_y ;
float  FTOF__hits_z ;
float  FTOF__hits_x_unc ;
float  FTOF__hits_y_unc ;
float  FTOF__hits_z_unc ;
float  FTOF__hits_tx ;
float  FTOF__hits_ty ;
float  FTOF__hits_tz ;
short  FTOF__hits_adc_idx1 ;
short  FTOF__hits_adc_idx2 ;
short  FTOF__hits_tdc_idx1 ;
short  FTOF__hits_tdc_idx2 ;
float  FTOF__hits_pathLength ;
float  FTOF__hits_pathLengthThruBar ;
hipo::bank *FMTRec__Clusters = 0;
int get_FMTRec__Clusters(int row);
short  FMTRec__Clusters_ID ;
short  FMTRec__Clusters_sector ;
short  FMTRec__Clusters_layer ;
short  FMTRec__Clusters_size ;
float  FMTRec__Clusters_ETot ;
float  FMTRec__Clusters_seedE ;
int  FMTRec__Clusters_seedStrip ;
float  FMTRec__Clusters_centroid ;
float  FMTRec__Clusters_centroidResidual ;
float  FMTRec__Clusters_seedResidual ;
short  FMTRec__Clusters_Hit1_ID ;
short  FMTRec__Clusters_Hit2_ID ;
short  FMTRec__Clusters_Hit3_ID ;
short  FMTRec__Clusters_Hit4_ID ;
short  FMTRec__Clusters_Hit5_ID ;
short  FMTRec__Clusters_trkID ;
hipo::bank *HEL__adc = 0;
int get_HEL__adc(int row);
short  HEL__adc_sector ;
short  HEL__adc_layer ;
short  HEL__adc_component ;
short  HEL__adc_order ;
int  HEL__adc_ADC ;
float  HEL__adc_time ;
short  HEL__adc_ped ;
hipo::bank *DETECTOR__ccpb = 0;
int get_DETECTOR__ccpb(int row);
short  DETECTOR__ccpb_sector ;
float  DETECTOR__ccpb_nphe ;
float  DETECTOR__ccpb_time ;
float  DETECTOR__ccpb_path ;
hipo::bank *REC__ForwardTagger = 0;
int get_REC__ForwardTagger(int row);
short  REC__ForwardTagger_index ;
short  REC__ForwardTagger_pindex ;
short  REC__ForwardTagger_detector ;
short  REC__ForwardTagger_layer ;
float  REC__ForwardTagger_energy ;
float  REC__ForwardTagger_time ;
float  REC__ForwardTagger_path ;
float  REC__ForwardTagger_chi2 ;
float  REC__ForwardTagger_x ;
float  REC__ForwardTagger_y ;
float  REC__ForwardTagger_z ;
float  REC__ForwardTagger_dx ;
float  REC__ForwardTagger_dy ;
float  REC__ForwardTagger_radius ;
short  REC__ForwardTagger_size ;
short  REC__ForwardTagger_status ;
hipo::bank *FTTRK__adc = 0;
int get_FTTRK__adc(int row);
short  FTTRK__adc_sector ;
short  FTTRK__adc_layer ;
short  FTTRK__adc_component ;
short  FTTRK__adc_order ;
int  FTTRK__adc_ADC ;
float  FTTRK__adc_time ;
short  FTTRK__adc_ped ;
int  FTTRK__adc_integral ;
long  FTTRK__adc_timestamp ;
hipo::bank *FTOF__rawhits = 0;
int get_FTOF__rawhits(int row);
short  FTOF__rawhits_id ;
short  FTOF__rawhits_status ;
short  FTOF__rawhits_sector ;
short  FTOF__rawhits_layer ;
short  FTOF__rawhits_component ;
float  FTOF__rawhits_energy_left ;
float  FTOF__rawhits_energy_right ;
float  FTOF__rawhits_time_left ;
float  FTOF__rawhits_time_right ;
float  FTOF__rawhits_energy_left_unc ;
float  FTOF__rawhits_energy_right_unc ;
float  FTOF__rawhits_time_left_unc ;
float  FTOF__rawhits_time_right_unc ;
hipo::bank *RECHB__TrackCross = 0;
int get_RECHB__TrackCross(int row);
short  RECHB__TrackCross_index ;
short  RECHB__TrackCross_pindex ;
short  RECHB__TrackCross_detector ;
short  RECHB__TrackCross_sector ;
short  RECHB__TrackCross_layer ;
float  RECHB__TrackCross_c_x ;
float  RECHB__TrackCross_c_y ;
float  RECHB__TrackCross_c_z ;
float  RECHB__TrackCross_c_ux ;
float  RECHB__TrackCross_c_uy ;
float  RECHB__TrackCross_c_uz ;
short  RECHB__TrackCross_status ;
hipo::bank *DETECTOR__scpb = 0;
int get_DETECTOR__scpb(int row);
short  DETECTOR__scpb_sector ;
short  DETECTOR__scpb_paddle ;
float  DETECTOR__scpb_edep ;
float  DETECTOR__scpb_time ;
float  DETECTOR__scpb_path ;
hipo::bank *FTHODO__hits = 0;
int get_FTHODO__hits(int row);
short  FTHODO__hits_sector ;
short  FTHODO__hits_layer ;
short  FTHODO__hits_component ;
float  FTHODO__hits_x ;
float  FTHODO__hits_y ;
float  FTHODO__hits_z ;
float  FTHODO__hits_energy ;
float  FTHODO__hits_time ;
short  FTHODO__hits_hitID ;
short  FTHODO__hits_clusterID ;
hipo::bank *RECFT__Event = 0;
int get_RECFT__Event(int row);
short  RECFT__Event_EvCAT ;
float  RECFT__Event_startTime ;
hipo::bank *CTOF__adc = 0;
int get_CTOF__adc(int row);
short  CTOF__adc_sector ;
short  CTOF__adc_layer ;
short  CTOF__adc_component ;
short  CTOF__adc_order ;
int  CTOF__adc_ADC ;
float  CTOF__adc_time ;
short  CTOF__adc_ped ;
hipo::bank *EVENT__detector = 0;
int get_EVENT__detector(int row);
int  EVENT__detector_scsector ;
int  EVENT__detector_scpaddle ;
int  EVENT__detector_ecsector ;
float  EVENT__detector_ccnphe ;
float  EVENT__detector_sctime ;
float  EVENT__detector_scpath ;
float  EVENT__detector_ectime ;
float  EVENT__detector_ecpath ;
float  EVENT__detector_ecin ;
float  EVENT__detector_ecout ;
float  EVENT__detector_ectot ;
float  EVENT__detector_ecu ;
float  EVENT__detector_ecv ;
float  EVENT__detector_ecw ;
hipo::bank *DC__doca = 0;
int get_DC__doca(int row);
short  DC__doca_LR ;
float  DC__doca_doca ;
float  DC__doca_sdoca ;
float  DC__doca_time ;
float  DC__doca_stime ;
hipo::bank *HTCC__tdc = 0;
int get_HTCC__tdc(int row);
short  HTCC__tdc_sector ;
short  HTCC__tdc_layer ;
short  HTCC__tdc_component ;
short  HTCC__tdc_order ;
int  HTCC__tdc_TDC ;
hipo::bank *HEL__online = 0;
int get_HEL__online(int row);
short  HEL__online_helicity ;
short  HEL__online_helicityRaw ;
hipo::bank *REC__Event = 0;
int get_REC__Event(int row);
long  REC__Event_category ;
long  REC__Event_topology ;
float  REC__Event_beamCharge ;
double  REC__Event_liveTime ;
float  REC__Event_startTime ;
float  REC__Event_RFTime ;
short  REC__Event_helicity ;
short  REC__Event_helicityRaw ;
float  REC__Event_procTime ;
hipo::bank *REC__Particle = 0;
int get_REC__Particle(int row);
int  REC__Particle_pid ;
float  REC__Particle_px ;
float  REC__Particle_py ;
float  REC__Particle_pz ;
float  REC__Particle_vx ;
float  REC__Particle_vy ;
float  REC__Particle_vz ;
short  REC__Particle_charge ;
float  REC__Particle_beta ;
float  REC__Particle_chi2pid ;
short  REC__Particle_status ;
hipo::bank *REC__Traj = 0;
int get_REC__Traj(int row);
short  REC__Traj_pindex ;
short  REC__Traj_index ;
short  REC__Traj_detector ;
short  REC__Traj_layer ;
float  REC__Traj_x ;
float  REC__Traj_y ;
float  REC__Traj_z ;
float  REC__Traj_cx ;
float  REC__Traj_cy ;
float  REC__Traj_cz ;
float  REC__Traj_path ;
hipo::bank *FTOF__tdc = 0;
int get_FTOF__tdc(int row);
short  FTOF__tdc_sector ;
short  FTOF__tdc_layer ;
short  FTOF__tdc_component ;
short  FTOF__tdc_order ;
int  FTOF__tdc_TDC ;
hipo::bank *HitBasedTrkg__HBSegments = 0;
int get_HitBasedTrkg__HBSegments(int row);
short  HitBasedTrkg__HBSegments_id ;
short  HitBasedTrkg__HBSegments_status ;
short  HitBasedTrkg__HBSegments_sector ;
short  HitBasedTrkg__HBSegments_superlayer ;
short  HitBasedTrkg__HBSegments_Cluster_ID ;
short  HitBasedTrkg__HBSegments_Hit1_ID ;
short  HitBasedTrkg__HBSegments_Hit2_ID ;
short  HitBasedTrkg__HBSegments_Hit3_ID ;
short  HitBasedTrkg__HBSegments_Hit4_ID ;
short  HitBasedTrkg__HBSegments_Hit5_ID ;
short  HitBasedTrkg__HBSegments_Hit6_ID ;
short  HitBasedTrkg__HBSegments_Hit7_ID ;
short  HitBasedTrkg__HBSegments_Hit8_ID ;
short  HitBasedTrkg__HBSegments_Hit9_ID ;
short  HitBasedTrkg__HBSegments_Hit10_ID ;
short  HitBasedTrkg__HBSegments_Hit11_ID ;
short  HitBasedTrkg__HBSegments_Hit12_ID ;
float  HitBasedTrkg__HBSegments_avgWire ;
float  HitBasedTrkg__HBSegments_fitChisqProb ;
float  HitBasedTrkg__HBSegments_fitSlope ;
float  HitBasedTrkg__HBSegments_fitSlopeErr ;
float  HitBasedTrkg__HBSegments_fitInterc ;
float  HitBasedTrkg__HBSegments_fitIntercErr ;
float  HitBasedTrkg__HBSegments_SegEndPoint1X ;
float  HitBasedTrkg__HBSegments_SegEndPoint1Z ;
float  HitBasedTrkg__HBSegments_SegEndPoint2X ;
float  HitBasedTrkg__HBSegments_SegEndPoint2Z ;
short  HitBasedTrkg__HBSegments_size ;
hipo::bank *FTCAL__hits = 0;
int get_FTCAL__hits(int row);
short  FTCAL__hits_idx ;
short  FTCAL__hits_idy ;
float  FTCAL__hits_x ;
float  FTCAL__hits_y ;
float  FTCAL__hits_z ;
float  FTCAL__hits_energy ;
float  FTCAL__hits_time ;
short  FTCAL__hits_hitID ;
short  FTCAL__hits_clusterID ;
hipo::bank *FMTRec__Hits = 0;
int get_FMTRec__Hits(int row);
short  FMTRec__Hits_ID ;
short  FMTRec__Hits_sector ;
short  FMTRec__Hits_layer ;
int  FMTRec__Hits_strip ;
float  FMTRec__Hits_fitResidual ;
int  FMTRec__Hits_trkingStat ;
short  FMTRec__Hits_clusterID ;
short  FMTRec__Hits_trkID ;
hipo::bank *BAND__tdc = 0;
int get_BAND__tdc(int row);
short  BAND__tdc_sector ;
short  BAND__tdc_layer ;
short  BAND__tdc_component ;
short  BAND__tdc_order ;
int  BAND__tdc_TDC ;
hipo::bank *RF__adc = 0;
int get_RF__adc(int row);
short  RF__adc_sector ;
short  RF__adc_layer ;
short  RF__adc_component ;
short  RF__adc_order ;
int  RF__adc_ADC ;
float  RF__adc_time ;
short  RF__adc_ped ;
hipo::bank *FMTRec__Crosses = 0;
int get_FMTRec__Crosses(int row);
short  FMTRec__Crosses_ID ;
short  FMTRec__Crosses_sector ;
short  FMTRec__Crosses_region ;
float  FMTRec__Crosses_x ;
float  FMTRec__Crosses_y ;
float  FMTRec__Crosses_z ;
float  FMTRec__Crosses_err_x ;
float  FMTRec__Crosses_err_y ;
float  FMTRec__Crosses_err_z ;
float  FMTRec__Crosses_ux ;
float  FMTRec__Crosses_uy ;
float  FMTRec__Crosses_uz ;
short  FMTRec__Crosses_Cluster1_ID ;
short  FMTRec__Crosses_Cluster2_ID ;
short  FMTRec__Crosses_trkID ;
hipo::bank *MC__Particle = 0;
int get_MC__Particle(int row);
int  MC__Particle_pid ;
float  MC__Particle_px ;
float  MC__Particle_py ;
float  MC__Particle_pz ;
float  MC__Particle_vx ;
float  MC__Particle_vy ;
float  MC__Particle_vz ;
float  MC__Particle_vt ;
hipo::bank *ECAL__tdc = 0;
int get_ECAL__tdc(int row);
short  ECAL__tdc_sector ;
short  ECAL__tdc_layer ;
short  ECAL__tdc_component ;
short  ECAL__tdc_order ;
int  ECAL__tdc_TDC ;
hipo::bank *RICH__tdc = 0;
int get_RICH__tdc(int row);
short  RICH__tdc_sector ;
short  RICH__tdc_layer ;
short  RICH__tdc_component ;
short  RICH__tdc_order ;
int  RICH__tdc_TDC ;
hipo::bank *LTCC__tdc = 0;
int get_LTCC__tdc(int row);
short  LTCC__tdc_sector ;
short  LTCC__tdc_layer ;
short  LTCC__tdc_component ;
short  LTCC__tdc_order ;
int  LTCC__tdc_TDC ;
hipo::bank *ECAL__moments = 0;
int get_ECAL__moments(int row);
float  ECAL__moments_distU ;
float  ECAL__moments_distV ;
float  ECAL__moments_distW ;
float  ECAL__moments_m1u ;
float  ECAL__moments_m1v ;
float  ECAL__moments_m1w ;
float  ECAL__moments_m2u ;
float  ECAL__moments_m2v ;
float  ECAL__moments_m2w ;
float  ECAL__moments_m3u ;
float  ECAL__moments_m3v ;
float  ECAL__moments_m3w ;
hipo::bank *EVENT__particle = 0;
int get_EVENT__particle(int row);
short  EVENT__particle_status ;
short  EVENT__particle_charge ;
int  EVENT__particle_pid ;
float  EVENT__particle_mass ;
float  EVENT__particle_px ;
float  EVENT__particle_py ;
float  EVENT__particle_pz ;
float  EVENT__particle_vx ;
float  EVENT__particle_vy ;
float  EVENT__particle_vz ;
short  EVENT__particle_dcstat ;
short  EVENT__particle_ecstat ;
short  EVENT__particle_scstat ;
short  EVENT__particle_ccstat ;
short  EVENT__particle_lcstat ;
hipo::bank *RUN__trigger = 0;
int get_RUN__trigger(int row);
int  RUN__trigger_id ;
int  RUN__trigger_trigger ;
hipo::bank *HitBasedTrkg__HBHits = 0;
int get_HitBasedTrkg__HBHits(int row);
short  HitBasedTrkg__HBHits_id ;
short  HitBasedTrkg__HBHits_status ;
short  HitBasedTrkg__HBHits_sector ;
short  HitBasedTrkg__HBHits_superlayer ;
short  HitBasedTrkg__HBHits_layer ;
short  HitBasedTrkg__HBHits_wire ;
int  HitBasedTrkg__HBHits_TDC ;
float  HitBasedTrkg__HBHits_trkDoca ;
float  HitBasedTrkg__HBHits_docaError ;
short  HitBasedTrkg__HBHits_LR ;
float  HitBasedTrkg__HBHits_LocX ;
float  HitBasedTrkg__HBHits_LocY ;
float  HitBasedTrkg__HBHits_X ;
float  HitBasedTrkg__HBHits_Z ;
float  HitBasedTrkg__HBHits_B ;
float  HitBasedTrkg__HBHits_TProp ;
float  HitBasedTrkg__HBHits_TFlight ;
short  HitBasedTrkg__HBHits_clusterID ;
short  HitBasedTrkg__HBHits_trkID ;
hipo::bank *TimeBasedTrkg__TBHits = 0;
int get_TimeBasedTrkg__TBHits(int row);
short  TimeBasedTrkg__TBHits_id ;
short  TimeBasedTrkg__TBHits_status ;
short  TimeBasedTrkg__TBHits_sector ;
short  TimeBasedTrkg__TBHits_superlayer ;
short  TimeBasedTrkg__TBHits_layer ;
short  TimeBasedTrkg__TBHits_wire ;
int  TimeBasedTrkg__TBHits_TDC ;
float  TimeBasedTrkg__TBHits_doca ;
float  TimeBasedTrkg__TBHits_docaError ;
float  TimeBasedTrkg__TBHits_trkDoca ;
float  TimeBasedTrkg__TBHits_timeResidual ;
float  TimeBasedTrkg__TBHits_fitResidual ;
short  TimeBasedTrkg__TBHits_LR ;
float  TimeBasedTrkg__TBHits_X ;
float  TimeBasedTrkg__TBHits_Z ;
float  TimeBasedTrkg__TBHits_B ;
float  TimeBasedTrkg__TBHits_Alpha ;
float  TimeBasedTrkg__TBHits_TProp ;
float  TimeBasedTrkg__TBHits_TFlight ;
float  TimeBasedTrkg__TBHits_T0 ;
float  TimeBasedTrkg__TBHits_TStart ;
short  TimeBasedTrkg__TBHits_clusterID ;
short  TimeBasedTrkg__TBHits_trkID ;
float  TimeBasedTrkg__TBHits_time ;
float  TimeBasedTrkg__TBHits_beta ;
float  TimeBasedTrkg__TBHits_tBeta ;
hipo::bank *CTOF__hits = 0;
int get_CTOF__hits(int row);
short  CTOF__hits_id ;
short  CTOF__hits_status ;
short  CTOF__hits_trkID ;
short  CTOF__hits_sector ;
short  CTOF__hits_layer ;
short  CTOF__hits_component ;
float  CTOF__hits_energy ;
float  CTOF__hits_time ;
float  CTOF__hits_energy_unc ;
float  CTOF__hits_time_unc ;
float  CTOF__hits_x ;
float  CTOF__hits_y ;
float  CTOF__hits_z ;
float  CTOF__hits_x_unc ;
float  CTOF__hits_y_unc ;
float  CTOF__hits_z_unc ;
float  CTOF__hits_tx ;
float  CTOF__hits_ty ;
float  CTOF__hits_tz ;
short  CTOF__hits_adc_idx1 ;
short  CTOF__hits_adc_idx2 ;
short  CTOF__hits_tdc_idx1 ;
short  CTOF__hits_tdc_idx2 ;
float  CTOF__hits_pathLength ;
float  CTOF__hits_pathLengthThruBar ;
hipo::bank *RECHB__Particle = 0;
int get_RECHB__Particle(int row);
int  RECHB__Particle_pid ;
float  RECHB__Particle_px ;
float  RECHB__Particle_py ;
float  RECHB__Particle_pz ;
float  RECHB__Particle_vx ;
float  RECHB__Particle_vy ;
float  RECHB__Particle_vz ;
short  RECHB__Particle_charge ;
float  RECHB__Particle_beta ;
float  RECHB__Particle_chi2pid ;
short  RECHB__Particle_status ;
hipo::bank *RAW__tdc = 0;
int get_RAW__tdc(int row);
short  RAW__tdc_crate ;
short  RAW__tdc_slot ;
short  RAW__tdc_channel ;
short  RAW__tdc_order ;
int  RAW__tdc_TDC ;
hipo::bank *RICH__photons = 0;
int get_RICH__photons(int row);
short  RICH__photons_id ;
short  RICH__photons_type ;
short  RICH__photons_hit_index ;
short  RICH__photons_hadron_index ;
float  RICH__photons_start_time ;
float  RICH__photons_analytic_the ;
float  RICH__photons_analytic_phi ;
float  RICH__photons_analytic_path ;
float  RICH__photons_analytic_time ;
float  RICH__photons_analytic_EtaC ;
float  RICH__photons_analytic_aeron ;
float  RICH__photons_analytic_elpr ;
float  RICH__photons_analytic_pipr ;
float  RICH__photons_analytic_kpr ;
float  RICH__photons_analytic_prpr ;
float  RICH__photons_analytic_bgpr ;
float  RICH__photons_traced_the ;
float  RICH__photons_traced_phi ;
float  RICH__photons_traced_hitx ;
float  RICH__photons_traced_hity ;
float  RICH__photons_traced_hitz ;
float  RICH__photons_traced_path ;
float  RICH__photons_traced_time ;
short  RICH__photons_traced_nrfl ;
short  RICH__photons_traced_nrfr ;
short  RICH__photons_traced_1rfl ;
float  RICH__photons_traced_EtaC ;
float  RICH__photons_traced_aeron ;
float  RICH__photons_traced_elpr ;
float  RICH__photons_traced_pipr ;
float  RICH__photons_traced_kpr ;
float  RICH__photons_traced_prpr ;
float  RICH__photons_traced_bgpr ;
hipo::bank *HEL__flip = 0;
int get_HEL__flip(int row);
int  HEL__flip_run ;
int  HEL__flip_event ;
long  HEL__flip_timestamp ;
short  HEL__flip_helicity ;
short  HEL__flip_helicityRaw ;
short  HEL__flip_pair ;
short  HEL__flip_pattern ;
short  HEL__flip_status ;
hipo::bank *TimeBasedTrkg__Trajectory = 0;
int get_TimeBasedTrkg__Trajectory(int row);
short  TimeBasedTrkg__Trajectory_id ;
short  TimeBasedTrkg__Trajectory_detector ;
short  TimeBasedTrkg__Trajectory_layer ;
float  TimeBasedTrkg__Trajectory_x ;
float  TimeBasedTrkg__Trajectory_y ;
float  TimeBasedTrkg__Trajectory_z ;
float  TimeBasedTrkg__Trajectory_tx ;
float  TimeBasedTrkg__Trajectory_ty ;
float  TimeBasedTrkg__Trajectory_tz ;
float  TimeBasedTrkg__Trajectory_B ;
float  TimeBasedTrkg__Trajectory_path ;
hipo::bank *DETECTOR__ecpb = 0;
int get_DETECTOR__ecpb(int row);
short  DETECTOR__ecpb_sector ;
float  DETECTOR__ecpb_etot ;
float  DETECTOR__ecpb_ein ;
float  DETECTOR__ecpb_eout ;
float  DETECTOR__ecpb_time ;
float  DETECTOR__ecpb_path ;
float  DETECTOR__ecpb_x ;
float  DETECTOR__ecpb_y ;
float  DETECTOR__ecpb_z ;
hipo::bank *CND__hits = 0;
int get_CND__hits(int row);
short  CND__hits_id ;
short  CND__hits_status ;
short  CND__hits_trkID ;
short  CND__hits_sector ;
short  CND__hits_layer ;
short  CND__hits_component ;
float  CND__hits_energy ;
float  CND__hits_time ;
float  CND__hits_energy_unc ;
float  CND__hits_time_unc ;
float  CND__hits_x ;
float  CND__hits_y ;
float  CND__hits_z ;
float  CND__hits_x_unc ;
float  CND__hits_y_unc ;
float  CND__hits_z_unc ;
float  CND__hits_tx ;
float  CND__hits_ty ;
float  CND__hits_tz ;
float  CND__hits_tlength ;
float  CND__hits_pathlength ;
short  CND__hits_indexLadc ;
short  CND__hits_indexRadc ;
short  CND__hits_indexLtdc ;
short  CND__hits_indexRtdc ;
